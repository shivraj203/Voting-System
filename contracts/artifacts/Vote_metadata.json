{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "candidateList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "party",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "age",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "gender",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "candidateId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "candidateAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "votes",
								"type": "uint256"
							}
						],
						"internalType": "struct Vote.Candidate[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_party",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_age",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_gender",
						"type": "string"
					}
				],
				"name": "candidateRegister",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionCommision",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergency",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "result",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_voterId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "vote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_endTime",
						"type": "uint256"
					}
				],
				"name": "voteTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "voterList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "age",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "voterId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "gender",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "voteCandidateId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "voterAddress",
								"type": "address"
							}
						],
						"internalType": "struct Vote.Voter[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_age",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_gender",
						"type": "string"
					}
				],
				"name": "voterRegister",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "votingStatus",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "winner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Voting.sol": "Vote"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Voting.sol": {
			"keccak256": "0x6d107b4864cf304df0115321fea46e763e76e055208eeb0b2c2a5d17f6482bf0",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://ae077a206f7763c0f387f832bb0850e6bd099e2063753dacf2f7db06f1624493",
				"dweb:/ipfs/QmRadXhvBDRQA4t6Q8v5pcDDneV85qbRQWgByTdJFAnp7W"
			]
		}
	},
	"version": 1
}